#include <ros.h>
#include <std_msgs/UInt8.h>

#include <Metro.h>
#include <rgb_matrix.h>
#include <SPI.h>

#define N_X 2
#define N_Y 1

//Hardware SPI
#define DATA_PIN  51
#define CLK_PIN   52

#define LATCH_PIN 8

rgb_matrix M = rgb_matrix(N_X, N_Y, DATA_PIN, CLK_PIN, LATCH_PIN);

Metro nextFrame = Metro(100);
Metro freezeFrame = Metro(5000);

int frameNumber = 0;

volatile int commandRcv;

//PIR vars
#define PIR_PIN 40
volatile int PIRval;
Metro PIRdelay = Metro(5000);

const unsigned char normalFrames[5][16] =
{
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x3C,0x66,0x42,0x42,0x66,0x3C,0x00,0x00,0x3C,0x66,0x42,0x42,0x66,0x3C,0x00},
  {0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E}
};//blue+green

const unsigned char angryFrames[14][16] =
{
  {0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E},
  {0x00,0x7E,0xC3,0x81,0x81,0xC3,0x7E,0x00,0x00,0x7E,0xC3,0x81,0x81,0xC3,0x7E,0x00},
  {0x00,0x00,0x7E,0x81,0x81,0x7E,0x00,0x00,0x00,0x00,0x7E,0x81,0x81,0x7E,0x00,0x00},
  {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},
  {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x7E,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x7E,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x3C,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x3C,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00}
};//red

const unsigned char sadFrames[8][16] =
{
  {0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E},
  {0x3C,0x66,0x42,0x42,0x42,0x42,0x66,0x3C,0x3C,0x66,0x42,0x42,0x42,0x42,0x66,0x3C},
  {0x18,0x24,0x24,0x24,0x24,0x24,0x24,0x18,0x18,0x24,0x24,0x24,0x24,0x24,0x24,0x18},
  {0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18},
  {0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08},
  {0x08,0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x08,0x04,0x04,0x04,0x04,0x04,0x04,0x08},
  {0x1C,0x06,0x06,0x06,0x06,0x06,0x0E,0x1C,0x0C,0x06,0x02,0x02,0x02,0x02,0x06,0x0C},
  {0x1E,0x07,0x03,0x03,0x03,0x03,0x07,0x1E,0x1E,0x07,0x03,0x03,0x03,0x03,0x07,0x1E}
};//red+blue

const unsigned char surprisedFrames[16][16] =
{
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00,0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00},
  {0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0xFF,0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0xFF},
  {0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00,0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00,0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00},
  {0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0xFF,0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0xFF},
  {0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00,0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00,0x00,0x7E,0x42,0x42,0x42,0x42,0x7E,0x00},
  {0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0xFF,0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0xFF}
};//red+green

const unsigned char fearfulFrames[13][16] =
{
  {0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E},
  {0x00,0x3C,0x66,0x42,0x42,0x66,0x3C,0x00,0x00,0x3C,0x66,0x42,0x42,0x66,0x3C,0x00},
  {0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00,0x00,0x00,0x3C,0x24,0x24,0x3C,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00,0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00},
  {0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00,0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00},
  {0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E},
  {0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00,0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00},
  {0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E},
  {0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00,0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00},
  {0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E},
  {0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00,0x00,0x3C,0x66,0x5A,0x5A,0x66,0x3C,0x00},
  {0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x99,0x99,0x81,0xC3,0x7E}
};//red+blue

const unsigned char restFrames[5][16] =
{
  {0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E,0x7E,0xC3,0x81,0x81,0x81,0x81,0xC3,0x7E},
  {0x3C,0x66,0x42,0x42,0x42,0x42,0x66,0x3C,0x3C,0x66,0x42,0x42,0x42,0x42,0x66,0x3C},
  {0x18,0x24,0x24,0x24,0x24,0x24,0x24,0x18,0x18,0x24,0x24,0x24,0x24,0x24,0x24,0x18},
  {0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18},
  {0x00,0x00,0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x18,0x00,0x00}
};//blue+green

const unsigned char disgustedFrames[21][16] =
{
  {0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18},
  {0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C},
  {0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x66},
  {0xC3,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x66,0xC3},
  {0x81,0xC3,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x66,0xC3,0x81},
  {0x00,0x81,0xC3,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x18,0x3C,0x66,0xC3,0x81,0x00},
  {0x00,0x00,0x81,0xC3,0x66,0x3C,0x18,0x00,0x00,0x18,0x3C,0x66,0xC3,0x81,0x00,0x00},
  {0x00,0x00,0x00,0x81,0xC3,0x66,0x3C,0x18,0x18,0x3C,0x66,0xC3,0x81,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x81,0xC3,0x66,0x3C,0x3C,0x66,0xC3,0x81,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x81,0xC3,0x66,0x66,0xC3,0x81,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x00,0x81,0xC3,0xC3,0x81,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x81,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x81,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18},
  {0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C},
  {0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x66},
  {0xC3,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x66,0xC3},
  {0x81,0xC3,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x66,0xC3,0x81},
  {0x00,0x81,0xC3,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,0x18,0x3C,0x66,0xC3,0x81,0x00},
  {0x00,0x00,0x81,0xC3,0x66,0x3C,0x18,0x00,0x00,0x18,0x3C,0x66,0xC3,0x81,0x00,0x00},
  {0x00,0x00,0x00,0x81,0xC3,0x66,0x3C,0x18,0x18,0x3C,0x66,0xC3,0x81,0x00,0x00,0x00}
};//red+green

const unsigned char happy1Frames[24][16] =
{
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00,0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00},
  {0x81,0x5A,0x3C,0x7E,0x7E,0x3C,0x5A,0x81,0x81,0x5A,0x3C,0x7E,0x7E,0x3C,0x5A,0x81},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18},
  {0x18,0x5A,0x00,0xC3,0xC3,0x00,0x5A,0x18,0x18,0x5A,0x00,0xC3,0xC3,0x00,0x5A,0x18},
  {0x18,0x00,0x00,0x81,0x81,0x00,0x00,0x18,0x18,0x00,0x00,0x81,0x81,0x00,0x00,0x18},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00,0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00},
  {0x81,0x5A,0x3C,0x7E,0x7E,0x3C,0x5A,0x81,0x81,0x5A,0x3C,0x7E,0x7E,0x3C,0x5A,0x81},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18},
  {0x18,0x5A,0x00,0xC3,0xC3,0x00,0x5A,0x18,0x18,0x5A,0x00,0xC3,0xC3,0x00,0x5A,0x18},
  {0x18,0x00,0x00,0x81,0x81,0x00,0x00,0x18,0x18,0x00,0x00,0x81,0x81,0x00,0x00,0x18},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},
  {0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00,0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00},
  {0x81,0x5A,0x3C,0x7E,0x7E,0x3C,0x5A,0x81,0x81,0x5A,0x3C,0x7E,0x7E,0x3C,0x5A,0x81},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18},
  {0x18,0x5A,0x00,0xC3,0xC3,0x00,0x5A,0x18,0x18,0x5A,0x00,0xC3,0xC3,0x00,0x5A,0x18},
  {0x18,0x00,0x00,0x81,0x81,0x00,0x00,0x18,0x18,0x00,0x00,0x81,0x81,0x00,0x00,0x18}
};//Mixture...

const unsigned char happy2Frames[20][16] =
{
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C,0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34},
  {0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34,0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C,0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34},
  {0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34,0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C,0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34},
  {0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34,0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C,0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34},
  {0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34,0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C,0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34},
  {0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34,0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C,0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34},
  {0x2C,0x28,0xBF,0xFC,0x3F,0xFD,0x14,0x34,0x34,0x14,0xFD,0x3F,0xFC,0xBF,0x28,0x2C},
  {0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xFF,0xFF,0x3C,0x5A,0x18},
  {0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18,0x18,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x18}
};//Mixture...

ros::NodeHandle nh;

void _expression( const std_msgs::UInt8& cmd_msg)
{
  M.set_cur(0,0);
  M.clear(); 
  commandRcv = (int) cmd_msg.data;
  frameNumber = 0;
  nextFrame.reset();
  freezeFrame.reset();
}

ros::Subscriber<std_msgs::UInt8> sub_eyes("/andbot/EyesLED", _expression);

std_msgs::UInt8 _status;
ros::Publisher pub_PIR("/andbot/PIR/status", &_status);

void setup()
{
  pinMode(PIR_PIN, INPUT);
  commandRcv = -1;
  nh.initNode();
  nh.subscribe(sub_eyes);
  nh.advertise(pub_PIR);
  nh.spinOnce();
  M.set_cur(0,0);
  M.clear();  
  M.display(hook);
}

void loop()
{
  //hook loops automatically
  //M.set_cur(0,0);
  //M.clear();  
  //M.display(hook);
}

void hook(void)
{
  switch (commandRcv)
  {
    case 0://normal
      if(nextFrame.check() == 1 && frameNumber<5)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,normalFrames[frameNumber][i],COVER,6,TOP_LAYER);}
        if(frameNumber<5)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 2://happy1
      if(nextFrame.check() == 1 && frameNumber<24)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,happy1Frames[frameNumber][i],COVER,7,TOP_LAYER);}
        if(frameNumber<24)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 3://happy2
      if(nextFrame.check() == 1 && frameNumber<20)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,happy2Frames[frameNumber][i],COVER,7,TOP_LAYER);}
        if(frameNumber<20)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 5://surprised
      if(nextFrame.check() == 1 && frameNumber<16)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,surprisedFrames[frameNumber][i],COVER,3,TOP_LAYER);}
        if(frameNumber<16)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 4://sad
      if(nextFrame.check() == 1 && frameNumber<8)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,sadFrames[frameNumber][i],COVER,5,TOP_LAYER);}
        if(frameNumber<8)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 8://fearful
      if(nextFrame.check() == 1 && frameNumber<13)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,fearfulFrames[frameNumber][i],COVER,5,TOP_LAYER);}
        if(frameNumber<13)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 6://angry
      if(nextFrame.check() == 1 && frameNumber<14)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,angryFrames[frameNumber][i],COVER,1,TOP_LAYER);}
        if(frameNumber<14)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 7://disgusted
      if(nextFrame.check() == 1 && frameNumber<21)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,disgustedFrames[frameNumber][i],COVER,3,TOP_LAYER);}
        if(frameNumber<21)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    case 1://rest
      if(nextFrame.check() == 1 && frameNumber<5)
      {
        for(int i = 0; i < 16; ++i){
          M.put_byte(i,0,restFrames[frameNumber][i],COVER,6,TOP_LAYER);}
        if(frameNumber<5)frameNumber++;
      }
      if(freezeFrame.check() == 1) frameNumber = 0;
      break;
    default:
      nh.spinOnce();
      break;
  }
  PIRval = digitalRead(PIR_PIN);
  if(PIRval == 1)// && PIRdelay.check() == 1)
  {
    //INTRUDER!!!!!!!!!
    _status.data = 1;
    pub_PIR.publish(&_status);  
    PIRdelay.reset();
  }
  else
  {
    //NOBODY HERE!!!!!!
    _status.data = 0;
    pub_PIR.publish(&_status);
  }
  nh.spinOnce();
}
